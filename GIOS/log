11/14/2020

I was super excited about project 4, because I really want to learn gRPC. After 7 submissions, I finally passed the part 1. It took me so long to pass not because the part 1 is hard - it is not at all. But 1) I did not have a good C++ dev environment. 2) I was again stuck at some stupid bugs.

About the dev environment, for the first and second C project, I only used vim + TabNine plugin, and it was enough. Part of the reason is that the C project project we have is not overly complicated. There are just a few functions, and I can remember them by heart without problem. gRPC is a little bit different - there are more structures to the code. It is a major cognitive load for me to remember every type and function argument correctly. So I spent lots of time debugging stupid compile error. 

Not until I did this project did I realize how nice my dev environment at work is. The code referencing and code completion are fantastic. Finally, I decided to set up vscode for this project... Thinking that I will have more C++ project for future classes, it is perhaps important for me to get a okay environment. 

But it is a great simple project in terms of getting me familiarize with gRPC from server to client. I would not be able to see each part clearly if there were no such pratical project. 


10/28/2020

OMG, I finally successfully passed all the tests... What a few days it has been!

On Saturday, I finished almost all of the coding, and I felt pretty good about my approach [! what could be wrong, right, I feel so clear about it]. Then on Sunday I start to submit.. Not passing. Not passing. And I looked back and forth and not knowing why. Sometimes it passes and other times it fails... So typical of multi-threaded programming problems.. But the multi-threading part is clear to me, two queues, protected by mutex, right? That should not be wrong. Then it must have been the intra-process communications part. Okay, I am not proud of my implementations. It is terribly ugly. But from what I understand, there is nothing wrong as well...

So, I was terribly inefficient, without knowing where could be the problem. But after many many hours of debugging - I can finally replicate the problem. Specifically -> when proxy server is multi-threaded, and cache server is single threaded, the client hang; but when proxy server is single threaded, and cache server multi-threaded, the client is good. 

So proxy is wrong? But later I realized that when proxy is single threaded, cache is also pretty much single-threaded, because at any time there is only one request arriving. Here is one hint. And I also realize that somehow cache misses tasks, i.e., it seems that all of the tasks is the same as the last task if there are multiple tasks in the queue.  

Not only did I print out all the elements in the queue, did I realize my mistakes - well, it is my carelessness in assigning char array in C... when char a[] = b, where b is also a char array, it basically assigns b's address! So no wonder all my tasks in the queue is the last task....

And that is it... After I fix it, everything passes.

I worked on this project full time on weekends, and for monday and tuesday, besides working and life, I worked on debugging the rest of time, not even reading on Sunday and Monday (maybe one the first time I did not read before sleeping for the past 3 to 4 years!)..

On Saturday, I thought there would be Eurika moments in debugging this project, or like many other students have said they have almost epiphany moments in this class. But my bug is so trivial... I guess I wish I had been more careful about C's string and pointer manipulation. But I guess there are merits in struggling, even on trivial matters, in that I did think a little bit more carefully about everything in this project...


10/21/2020

The midterm and project 1 grades are out. I am okay - I guess it's in my expectations... 

Project 3 is indeed much much harder... I cannot code the whole thing in a day (took me a long time to understand the project) but have to break it into pieces. I am now left with the data transfer with the shared memory. 

That I feel Project 3 a lot harder to finish and the rest of the sememster stressful is due to my new job. I recently changed to a job which is kinda perfect for my study (and vice versa) - but oh boy is it hard. I am still coping with this new and much more hectic life. Stressful it is, but I do really appreciate this great opportunity to learn to build the things (mostly distributed systems) that I dreamed of learning in a real-world setting. 

I know I will learn a little bit of distributed systems in the 4th part of GIOS and more in Advanced Operating System. Maybe that's what i will take for the next semester. 

===
Okay, [with the help of class forum], I realize that I had a wrong design... I felt that using one message queue is not thread-safe, but MQ is so easy to work with and I did not push it.. Now I think I have a much better understanding of the project, and feel [sorta] confident to finish it this weekend... Finger crossed that I get to learn POSIX Shared Memory fast enough...

I guess one reason that the project is hard is that the process/requirement of the project is not clear at first sight. For example, this project is to implement a communication layer between proxy server and cache server. But before this project, I never heard these concepts before and easily get stuck at the conceptual level. 


10/7/2020

There is no better surprise than passing the autograder on first submission. While coding the part 1 of the 3rd project (there is no 2nd project), I certainly felt quite a bit of uncertainty. But I guess following along the CURL API example is enough. 

Last week was the midterm and I spent most of my time very ineffiently memorizing concepts I thought important, for a while I feel myself behind. (BTW, the midterm is okay - I've definitely more relentless midterms.) Now, I feel that I am back on track, as I will have about 3 weeks for the part 2, which will be much more difficult according to the prof and the TAs.

9/29/2020

Oh my goodness, I had not done mid-term exams for a long time... and I am not used to remember stuff any more... But it's good to read all the material again (spaced repetition is good, right)... 

I definitely underestimated the amount of materials I need to review... I think in the rest half of the semester, I ought to review, like really read through the class notes, regularly.


9/14/2020

I finally finished the project 1. This is a huge relief! Two weeks ago, I seriously doubted whether I can pass the class or not. Looks like I will be fine after all (maybe this will slap my face later when project 3 comes up :)).

Why did I feel project 1 is hard? Looking back, there isn't convoluted logic or anything. Even mutlti-thread programming, which I thought to be really hard, for our purpose, the pattern is very clear (boss-worker pattern, you just maintain a job queue, and make sure adding and popping from that queue isthread-safe using a lock). Looking at my submission pattern, I find that client is much easier for me than the server side, even though the codes are very similar: client is less of a black box than the server - I was clearer about the functions (how it will be used, or little details like what is the return value) I need to write on the client side than the server side. Yep, besides the unfamiliarity with C language and arcane socket API in C, writing code with components black-boxed (and the unseen code uses my code too) is hard for me. 

But I do enjoy working through the projects. It is fun to see something working or behave the way you intended it to. All of the debugging moments, some of them are caused purely by carelessness, but some of them do reveal something about the system I was unawared of.   


9/9/2020

After spending the entire labor day holiday working on the part 1 of the project, I finally get a sense of how challenging the program is. I made a good decision to take one class this semester.

But I really like the push from the program. Many concepts, if it were not for projects and exams, I would not have taken so much time and effort to try to understand them better. 

I am still struggling with part 2 of the project. But I try to read as many references as I have (three OS books) and actively think about it, I think I am very close of getting a solid grasp of multi-thread programming. 
